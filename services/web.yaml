# Web Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rails
  labels:
    app: rails
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rails
  template:
    metadata:
      labels:
        app: rails
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: rails-env-config
        image: recario/server:latest
        command: ["./bin/puma"]
        args: ["-C", "./config/puma.rb"] # https://github.com/rubygems/bundler/issues/6090 https://github.com/puma/puma/issues/1438
        name: rails
        ports:
        - containerPort: 3000
          protocol: TCP
        # livenessProbe:
        #   httpGet:
        #     path: /health
        #     port: 3000
        #   initialDelaySeconds: 30
        #   periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          # initialDelaySeconds: 30
          periodSeconds: 5
      initContainers:
        - name: db-create-migrate
          image: recario/server:latest
          command: ["bundle", "exec", "rake", "db:create", "db:migrate"]
          envFrom:
            - configMapRef:
                name: rails-env-config
---
apiVersion: v1
kind: Service
metadata:
  name: rails
spec:
  ports:
  - port: 80
    targetPort: 3000
  selector:
    app: rails
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: rails-ingress
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/server-snippet: |
      location ~ ^/ios(\/)?$ { return 301 https://apps.apple.com/us/app/id1458212603; }
      location ~ ^/apk(\/)?$ { return 301 https://assets.recar.io/recario.apk; }
      location ~ ^/android(\/)?$ { return 301 https://play.google.com/store/apps/details?id=com.viktorvsk.recario; }
      location ~ ^/news(\/)?$ { return 301 https://t.me/reCar_io; }
      location ~ ^/whitepaper(\/)?$ { return 301 https://assets.recar.io/Whitepaper.pdf; }
      location ~ ^/wog(\/)?$ { return 301 https://habr.com/ru/company/kaspersky/blog/508784/; }
spec:
  tls:
  - hosts:
    - recar.io
    - api.recar.io
    secretName: rails-tls
  rules:
  - host: recar.io
    http:
      paths:
      - backend:
          serviceName: rails
          servicePort: 80
  - host: api.recar.io
    http:
      paths:
      - backend:
          serviceName: rails
          servicePort: 80
  - host: workaround.recar.io
    http:
      paths:
      - backend:
          serviceName: rails
          servicePort: 80

